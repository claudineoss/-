{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "一 项目背景介绍\n",
    "============="
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "1. 同等条件下酒店的价格比租房高的多\n",
    "------------------------------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "数据显示2014上半年度全球酒店的平均价格较去年同期上涨4%。随着全球经济复苏进程的推动，尤以欧元区的表现最为突出，加之旅客在提升旅游花费时所彰显的信心，从而使全球酒店价格连续第五年获得稳步增长。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "以武汉市为例，租房的价格比住酒店的价格低的多"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "![](https://ai-studio-static-online.cdn.bcebos.com/d9f815115f494236be5b66c942f48273bd42d036f35f4ef280ae7a26c19b525d)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "以汉阳区为例，30平的房间租房平均一个月1000，每天大约30元左右，如果是住酒店，则每天价格200到300不等。\n",
    "![](https://ai-studio-static-online.cdn.bcebos.com/3c08055dcd214515aea3a2b994905f8da763b8ba23f24305a8e7e20475b8b648)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "2. 仍然有许多房屋无人居住，导致资源闲置"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "1994~2020年间，已竣工的商品房大约有170万套，在建商品房大约有145万套(套均面积95平计算)。另外，2007~2020年间，武汉动迁房大约建成70万套。总计约385万套存量住宅。\n",
    "2020年最新数据，武汉常驻人口有1230万，约440万户。若扣除100万高校在读学生，1994年之后建成的住宅就已经能满足武汉的市场需求。再加上每年25万套左右的新开工住宅，足以覆盖武汉年均19万的人口增量。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "二 项目方案介绍\n",
    "============"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "通过创建一个短期房租供住系统，可以与贝壳等找房平台合作，用户登录这些平台以后对自己需求的房屋价格和面积等因素进行搜索，接口对应的中介看房，从而找到自己满意的房屋。可以方便那些房子暂未出租出售的房主获得收益，与此同时，也可以方便那些对房屋质量和价格都有个人需求的租户找到自己满意的房子。\n",
    "该方案的独特之处在于，不局限于传统的租房买房交易活动，给闲置的房屋带来一定的收益，这个价格预计在租房和同等条件的酒店价格之间。当然后续的安保卫生等条件也可以由平台统一规划。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "三 数据介绍\n",
    "===="
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "解压房屋价格数据集\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "!unzip -oq /home/aistudio/data/data90992/homestayprice.zip -d work/"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "四 代码实现\n",
    "===="
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "detail = pd.read_csv(r\".\\house_info.csv\", encoding=\"utf-8\")\n",
    "# print(detail.head())\n",
    "print(\"清洗前缺失值的数目:\\n\",detail.isnull().sum())\n",
    "# 删除detail的缺失值\n",
    "d1 = detail.dropna(axis=0, how=\"any\") # 以d1 为数据源\n",
    "# print(d1)\n",
    "print(\"清洗后缺失值的数目:\\n\",d1.isnull().sum())\n",
    "\n",
    "# 从前向后查找和判断是否有重复值\n",
    "print(\"重复值:\",d1.duplicated().\n",
    "\n",
    "area = set(d1[\"位置1\"]) # 统计多少个行政区\n",
    "print(area)\n",
    "# 创建一个DataFrame 对象，筛选需要数据｛行政区，房源数量｝\n",
    "d2 = pd.DataFrame({'行政区':d1[\"位置1\"].unique(),'房源数量':[0]*len(area)})\n",
    "print(d2)\n",
    "print('-'*20)\n",
    "\n",
    "# groupby统计房源数量，并从小到大排序\n",
    "groupby_area = d1.groupby(by=\"位置1\").count()  \n",
    "print(groupby_area)\n",
    "d2[\"房源数量\"] = groupby_area.values\n",
    "d2 = d2.sort_values(by=[\"房源数量\"],ascending=True)\n",
    "print(d2)\n",
    "\n",
    "# 绘图\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib\n",
    "matplotlib.rcParams['font.sans-serif']=['SimHei']\n",
    "matplotlib.rcParams['axes.unicode_minus']=False\n",
    "\n",
    "X = d2[\"行政区\"]\n",
    "print(X)\n",
    "Y = d2[\"房源数量\"]\n",
    "print(Y)\n",
    "plt.figure(figsize=(8,6),dpi=300)\n",
    "plt.bar(X, Y, width=0.5, linewidth=2)\n",
    "for i,j in zip(X, Y):\n",
    "    plt.text(i, j, \"%d\" % j, fontsize=16)\n",
    "plt.xlabel(\"行政区\")\n",
    "plt.ylabel(\"房源数量\")\n",
    "plt.title(\"各行政区房源分布图\")\n",
    "plt.show()\n",
    "\n",
    "area_small = set(d1[\"小区\"]) # 统计多少个小区\n",
    "# print(area_small)\n",
    "\n",
    "# 创建一个DataFrame 对象，筛选需要数据｛小区，小区房源数量｝\n",
    "d_samll = pd.DataFrame({\"小区\":d1[\"小区\"].unique(),\"小区房源数量\":[0]*len(area_small) })\n",
    "print(d_samll)\n",
    "print('-'*40)\n",
    "\n",
    "# groupby统计小区房源数量，并从大到小排序\n",
    "groupby_area = d1.groupby(by=\"小区\").count()  \n",
    "# print(groupby_area)\n",
    "d_samll[\"小区房源数量\"] = groupby_area.values\n",
    "d_samll = d_samll.sort_values(by=[\"小区房源数量\"],ascending=False)\n",
    "print(d_samll)\n",
    "d_top10 =  d_samll.head(10) # 取前十\n",
    "print(\"小区房源数量TOP10是：\\n\",d_top10)\n",
    "\n",
    "area_small = set(d1[\"小区\"]) # 统计多少个小区\n",
    "# print(area_small)\n",
    "\n",
    "# 创建一个DataFrame 对象，筛选需要数据｛小区，小区房源数量｝\n",
    "d_samll = pd.DataFrame({\"小区\":d1[\"小区\"].unique(),\"小区房源数量\":[0]*len(area_small) })\n",
    "print(d_samll)\n",
    "print('-'*40)\n",
    "\n",
    "# groupby统计小区房源数量，并从大到小排序\n",
    "groupby_area = d1.groupby(by=\"小区\").count()  \n",
    "# print(groupby_area)\n",
    "d_samll[\"小区房源数量\"] = groupby_area.values\n",
    "d_samll = d_samll.sort_values(by=[\"小区房源数量\"],ascending=False)\n",
    "print(d_samll)\n",
    "d_top10 =  d_samll.head(10) # 取前十\n",
    "print(\"小区房源数量TOP10是：\\n\",d_top10)\n",
    "\n",
    "\n",
    "# 绘图\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib\n",
    "matplotlib.rcParams['font.sans-serif']=['SimHei']\n",
    "matplotlib.rcParams['axes.unicode_minus']=False\n",
    "\n",
    "X = d_top10[\"小区\"]\n",
    "print(X)\n",
    "Y = d_top10[\"小区房源数量\"]\n",
    "print(Y)\n",
    "plt.figure(figsize=(8,6),dpi=300)\n",
    "plt.bar(X, Y, width=0.5, linewidth=2)\n",
    "for i,j in zip(X, Y):\n",
    "    plt.text(i, j, \"%d\" % j, fontsize=12)\n",
    "plt.xlabel(\"小区\")\n",
    "plt.ylabel(\"小区房源数量\")\n",
    "plt.title(\"小区房源数量TOP10\")\n",
    "plt.xticks(rotation=335)\n",
    "plt.savefig(r\"C:\\Users\\锦樽\\Desktop\\小区房源数量TOP10.png\",dpi=400)\n",
    "plt.show()\n",
    "\n",
    "house_rent = set(d1[\"价格\"]) # 统计多少个价格\n",
    "# print(house_rent)\n",
    "\n",
    "# 创建一个DataFrame 对象，筛选需要数据｛价格，价格数量｝\n",
    "d_rent = pd.DataFrame({\"租金\":d1[\"价格\"].unique(),\"价格数量\":[0]*len(house_rent) })\n",
    "print(d_rent)\n",
    "print('-'*40)\n",
    "\n",
    "# groupby统计价格数量，并从大到小排序\n",
    "groupby_area = d1.groupby(by=\"价格\").count()  \n",
    "print(groupby_area)\n",
    "d_rent[\"价格数量\"] = groupby_area.values\n",
    "d_rent = d_rent.sort_values(by=[\"价格数量\"],ascending=False)\n",
    "print(d_rent)\n",
    "d_top10 =  d_rent.head(10) # 取前十\n",
    "print(\"价格数量TOP10是：\\n\",d_top10)\n",
    "\n",
    "# 对每个行政区，进行租金价格平均分析\n",
    "# 新建一个DataFrame对象，设置房租总金额和总面积初始值为0\n",
    "print(area)\n",
    "avg_rent = pd.DataFrame({'行政区':d1[\"位置1\"].unique(),'房租总金额':[0]*len(area),'总面积':[0]*len(area) })\n",
    "print(avg_rent)\n",
    "print('-'*40)\n",
    "\n",
    "# 求总金额和总面积\n",
    "sum_price = d1[\"价格\"].groupby(d1[\"位置1\"]).sum()\n",
    "sum_area = d1[\"面积\"].groupby(d1[\"位置1\"]).sum()\n",
    "avg_rent[\"房租总金额\"] = sum_price.values\n",
    "avg_rent[\"总面积\"] = sum_area.values\n",
    "print(avg_rent) \n",
    "\n",
    "# 计算各区域每平方米房租价格，并保留2位小数\n",
    "avg_rent['每平方米租金(元)'] = round(avg_rent['房租总金额']/avg_rent['总面积'],2)\n",
    "print(avg_rent)\n",
    "print(\"*-\"*25)\n",
    "# 合并需要的数据\n",
    "rent_merge = pd.merge(d2,avg_rent)\n",
    "rent_merge\n",
    "# print(rent_merge)\n",
    "\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.ticker as mtick\n",
    "from matplotlib.font_manager import FontProperties\n",
    "matplotlib.rcParams['font.sans-serif']=['SimHei']\n",
    "matplotlib.rcParams['axes.unicode_minus']=False\n",
    "num = rent_merge['房源数量']                  # 数量\n",
    "price = rent_merge['每平方米租金(元)']    # 价格\n",
    "\n",
    "X = rent_merge[\"行政区\"]\n",
    "print(X)\n",
    "# Y = rent_merge[\"房源数量\"]\n",
    "# print(Y)\n",
    "fig = plt.figure(figsize=(8,6))\n",
    "axl = fig.add_subplot(111)\n",
    "axl.plot(X, price,'or-',label = '价格')\n",
    "axl.set_ylim([0,210])\n",
    "axl.set_ylabel('价格')\n",
    "for i,j in zip(X, price):\n",
    "    plt.text(i, j, \"%d\" % j, fontsize=16)\n",
    "plt.title(\"租金分布情况\")\n",
    "ax2 = axl.twinx()\n",
    "plt.bar(X,num,width=0.4,color = 'green',label = '数量', linewidth=2)\n",
    "ax2.set_ylabel('数量')\n",
    "ax2.set_ylim([0,2000])\n",
    "for i,j in zip(X, num):\n",
    "    plt.text(i, j, \"%d\" % j, fontsize=16)\n",
    "plt.title(\"租金分布情况\")\n",
    "plt.savefig(r\"C:\\Users\\锦樽\\Desktop\\租金分布情况图.png\",dpi=400)\n",
    "plt.show()\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "detail = pd.read_csv(r\".\\house_info.csv\", encoding=\"utf-8\")\n",
    "# print(detail.head())\n",
    "print(\"清洗前缺失值的数目:\\n\",detail.isnull().sum())\n",
    "# 删除detail的缺失值\n",
    "d1 = detail.dropna(axis=0, how=\"any\") # 以d1 为数据源\n",
    "# print(d1)\n",
    "print(\"清洗后缺失值的数目:\\n\",d1.isnull().sum())\n",
    "\n",
    "# 从前向后查找和判断是否有重复值\n",
    "print(\"重复值:\",d1.duplicated()."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "五 预计实现结果\n",
    "====="
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "1. 预计会有越来越多的居民选择实惠的居住方案，用户通过在不同系统点击对应的接口，从而进入不同于租房这种长期的租约，不同于酒店这种虽然允许短期但是价格较高的商业交易，产生一种类似于顺风车这种资源闲置利用的短期房屋居住系统，是一种双方有益的交易行为，产生的平台交易费的一部分也可作为该接口系统的收益，从而维持系统发展。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "2.实现后效果图\n",
    "![](https://ai-studio-static-online.cdn.bcebos.com/1f4061f25066464bafbf4063935a365685ea534cc8354e7fb1b6a4761055a100)\n",
    "类似图中房屋介绍，不同的是会增加房屋租赁天数和卫生安保等状况。\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "六 个人总结\n",
    "======"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "姓名：刘甜甜\n",
    "学校：武汉大学\n",
    "个人介绍：2019级测绘学院学生，参加过互联网+，大学生创业，数学竞赛，英语竞赛等多项竞赛活动，日常生活中喜欢接触新鲜事物。"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "py35-paddle1.2.0"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
